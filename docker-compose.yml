services:

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: always

  php:
    build:
      context: .
      dockerfile: docker/php/Dockerfile
    container_name: symfony_app
    volumes:
      - .:/var/www/html
    ports:
      - "8000:8000"
    depends_on:
      - db
      - minio
    environment:
      APP_ENV: ${APP_ENV}
      APP_DEBUG: ${APP_DEBUG}
      APP_SECRET: ${APP_SECRET}
      ENDPOINT_MINIO: ${ENDPOINT_MINIO}
      ENDPOINT_MINIO_NAV: ${ENDPOINT_MINIO_NAV}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DATABASE_URL: ${DATABASE_URL}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
      MAILER_DSN: ${MAILER_DSN}
    command: >
      sh -c "sh docker/prod/init-minio.sh &&
             php -S 0.0.0.0:8000 -t public"

  db:
    image: mysql:8.0
    container_name: symfony_db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - "3306:3306"
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/prod/init.sql:/docker-entrypoint-initdb.d/init.sql

volumes:
  db_data:
  minio_data:
