services:
  db:
    image: mysql:8.0
    container_name: ESGI-pa-db
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    volumes:
      - db_data:/var/lib/mysql
      - ./docker/prod/init.sql:/docker-entrypoint-initdb.d/init.sql

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
    restart: always

  init-minio:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      sh -c "
        sleep 5 &&
        mc alias set local http://minio:9000 $${MINIO_ROOT_USER} $${MINIO_ROOT_PASSWORD} &&
        mc mb --ignore-existing local/$${MINIO_BUCKET} &&
        mc anonymous set download local/$${MINIO_BUCKET} &&
        echo '[✔] MinIO prêt.'"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}

  back:
    container_name: ESGI-pa-back
    image: ghcr.io/louis-guidez/esgi-pa-back
    volumes:
      - ./config/jwt:/var/www/html/config/jwt:ro
    environment:
      APP_ENV: prod
      APP_SECRET: ${APP_SECRET}
      APP_DEBUG: 0
      ENDPOINT_MINIO: ${ENDPOINT_MINIO}
      ENDPOINT_MINIO_NAV: ${ENDPOINT_MINIO_NAV}
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
      MINIO_BUCKET: ${MINIO_BUCKET}
      STRIPE_SECRET_KEY: ${STRIPE_SECRET_KEY}
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_HOST: ${MYSQL_HOST}
      DATABASE_URL: ${DATABASE_URL}
      CORS_ALLOW_ORIGIN: ${CORS_ALLOW_ORIGIN}
      MAILER_DSN: ${MAILER_DSN}
      MERCURE_URL: ${MERCURE_URL}
      MERCURE_PUBLIC_URL: ${MERCURE_PUBLIC_URL}
      MERCURE_JWT_SECRET: ${MERCURE_JWT_SECRET}
      MERCURE_ALLOWED_ORIGINS: ${MERCURE_ALLOWED_ORIGINS}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY}
      JWT_PUBLIC_KEY: ${JWT_PUBLIC_KEY}
    depends_on:
      - db
      - minio
      - init-minio
    restart: always

  nginx:
    image: ghcr.io/louis-guidez/esgi-pa-back-nginx
    container_name: ESGI-pa-nginx
    ports:
      - "81:80"
    depends_on:
      - back
    restart: always

  mercure:
    image: dunglas/mercure
    container_name: mercure
    restart: unless-stopped
    ports:
      - "3001:80"
    environment:
      SERVER_NAME: ':80'
      MERCURE_PUBLISHER_JWT_KEY: "${MERCURE_JWT_SECRET}"
      MERCURE_SUBSCRIBER_JWT_KEY: "${MERCURE_JWT_SECRET}"
      MERCURE_PUBLISH_ALLOWED_ORIGINS: "${MERCURE_ALLOWED_ORIGINS}"
      MERCURE_SUBSCRIBE_ALLOWED_ORIGINS: "${MERCURE_ALLOWED_ORIGINS}"
      MERCURE_EXTRA_DIRECTIVES: |
        cors_origins *
        anonymous
    volumes:
      - mercure_data:/data
      - mercure_config:/config

volumes:
  db_data:
  minio_data:
  mercure_data:
  mercure_config: